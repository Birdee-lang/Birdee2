##dim a as int, c as int #this is comment
dim b as int
#dim p as int=2+a/c+p%2
#p= b+ a * b * (56 + c)
#a= 2+a/c+p%2
function add(a as int, b as string)
	dim aa as int=1, bb as int
	aa=bb+1
	dim kk as int = function ()
		aa=0
	end
	bb=aa+1
end

#literal tests
#---------------------------------
dim e as string="fdfd\n123\t321\'\"\\"
a=3
1.234f
1.234d
1.123
1234L
213U
34234
2345.324
#---------------------------------
##

declare function puts (str as pointer) as int

class string
	private buf as pointer
	private len as int
	public function length() as int
		return len
	end
	public function add(other as string) as string
		len=len+other.len
		return this
	end
	public function getRaw() as pointer
		return addressof(buf)
	end
end class

#Expression test
##
dim c=(1+3*a*b+4%13)==5 && true || 23+a*10+9 >10
c=a.funcs[4]()[3](4,5).f.g[3]
##

#ia=12 #test for top-level name resolve

#Number cast test
dim ia = 2, ib = 2.1d, ic = 2.2f, id = 23U
ia=ib
ia=ic
ia=id
ib=ic
ic=id
#---------------------------------

dim str = "12312"
str.length()
puts(str.getRaw())