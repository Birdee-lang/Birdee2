import unsafe:ptr_cast
import unsafe:static_cast
import functional.option:*

#intrinsic
func get_type_info[T]() as type_info
end

@init_script
{@import bdutils
from traits import require_
@}

function dyn_cast[T1,T2](ptr as T2) as T1
{@
t1=bdutils.get_func_type_templ_at(0)
t2=bdutils.get_func_type_templ_at(1)
require_(  (t1.is_class(), lambda: "T1 must be a class"),
	(t2.is_class(), lambda: "T2 must be a class") )
bdutils.set_stmt('''get_type_info[T1]()''')
bdutils.set_stmt('''get_type_info[T2]()''')
bdutils.set_stmt('''return static_cast[T1](ptr)''')
@}
end

function as_instance[T1,T2](ptr as T2) as option[T1]
	return some(dyn_cast[T1,T2](ptr))
end