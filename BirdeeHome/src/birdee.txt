declare function puts (str as pointer) as int
declare function prints (str as pointer) as int
declare function memcpy alias "llvm.memcpy.p0i8.p0i8.i32"(dest as pointer,src as pointer, len as uint, align as uint, is_volatile as boolean)
declare function strcmp (a as pointer,b as pointer) as int
declare function trap alias "llvm.debugtrap" ()

function breakpoint()
	trap()
end

class genericarray
	private len as uint
	private dummy as pointer
	public function length() as uint
		return len
	end
	public function getRaw() as pointer
		return addressof(dummy)
	end
end

class string
	private buf as byte[]
	private len as uint
	public function length() as uint
		return len
	end
	public function __add__(other as string) as string
		dim ret=new string
		dim newlen as uint=len+other.len+1
		ret.buf=new byte * newlen
		ret.buf[newlen-1]=0
		memcpy(addressof(ret.buf[0]),addressof(buf[0]),len,1,false)
		memcpy(addressof(ret.buf[len]),addressof(other.buf[0]),other.len,1,false)
		ret.len=len+other.len
		return ret
	end
	public function __init__()
		len=0
		buf=null
	end

	public function __hash__() as uint
		dim h as uint = 0

		for dim i=0 till len
			h=31*h + buf[i]
		end
		return h
	end

	public function __eq__(other as string) as boolean
		if other===this then
			return true
		end
		if other===null then
			return false
		end
		return strcmp(addressof(buf[0]),addressof(other.buf[0]))==0
	end

	public function __ne__(other as string) as boolean
		if __eq__(other) then
			return false
		else
			return true
		end
	end

	public function getRaw() as pointer
		return addressof(buf[0])
	end
end class

class type_info
	private name as string
	public function get_name() as string => name
end

declare function BirdeeI2S (i as int) as string
declare function BirdeeP2S (i as pointer) as string

function int2str(i as int) as string
	return BirdeeI2S(i)
end

function bool2str(i as boolean) as string
	if i then
		return "true"
	else
		return "false"
	end
end

function pointer2str(i as pointer) as string
	return BirdeeP2S(i)
end

function print(str as string)
	prints(str.getRaw())
end

function println(str as string)
	puts(str.getRaw())
end