import list:list
class pair[K,V]
	public key as K
	public value as V
	public function set(k as K, v as V)
		key=k
		value=v
	end
end

function hash[T](v as T) as uint
	return {@
ty=resolve_type("T")
if ty.is_integer():
	expr("v")
else:
	raise Exception(f"Cannot hash the type: {ty}")
@}
end

class hash_map[K,V]
	private buckets as list[pair[K,V]][]

	public function create()
		buckets=new list[pair[K,V]] * 100
	end

	public function set(k as K, v as V)
		dim h = hash[K](k)
		buckets[h].push_back(new pair[K,V]:set(k,v))
	end
end