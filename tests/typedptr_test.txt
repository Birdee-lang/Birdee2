import typedptr:*

{@from bdassert import bdassert@}


struct mystruct
	public c as string
	public a as int
	public b as int
end

println("typed ptr test")
dim a as int =32
dim a2 as int
dim b as int[] = [1,2,3,4]
dim c as mystruct

dim pa = mkref[int](addressof(a))
{@bdassert("pa.get()==32")@}

pa.set(64)
{@bdassert("a==64")@}
{@bdassert("pa==mkref[int](addressof(a))")@}
pa=mkref[int](addressof(a2))
{@bdassert("pa==mkref[int](addressof(a2))")@}

pa = mkref[int](addressof(b[0]))
{@bdassert("pa.get()==1")@}
pa = pa + 1
{@bdassert("pa.get()==2")@}

c.a=1
c.b=2
c.c="sadas"
dim pc = mkref[mystruct](addressof(c))
{@bdassert("pc.f[\"a\"]()==1")@}
{@bdassert("pc.fptr[\"b\"]().get()==2")@}
{@bdassert("pc.f[\"c\"]()==\"sadas\"")@}
println("Should be sadas: " + pc.f["c"]())
println("test done")
