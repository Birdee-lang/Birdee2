##class complex
	public real as double
	public img as double
	public function __init__(real as double, img as double)
		this.real=real
		this.img=img
	end
	public function __add__ (other as complex) as complex
		return new complex(real+other.real,img+other.img)
	end

	public function __eq__(other as complex) as boolean
		return real==other.real && img==other.img
	end
end

dim a = new complex(1,2), b = new complex(3,4)
dim c = (a == a+b)##


class vector[T]
	private buf as T[]
	public func __getitem__ (idx as int) as T => buf[idx]
	public func __init__(sz as int) 
		buf=new T * sz
	end

	public func __setitem__ (idx as int,value as T)  => buf[idx]=value
end

dim vec = new vector[int](10)
dim itm as int = vec[2]
vec[2]=itm
